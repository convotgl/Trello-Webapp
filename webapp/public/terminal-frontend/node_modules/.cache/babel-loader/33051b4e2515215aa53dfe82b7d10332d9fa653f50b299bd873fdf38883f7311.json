{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      command: '',\n      output: '',\n      boards: '',\n      lists: ''\n    };\n  },\n  methods: {\n    async executeCommand() {\n      try {\n        const [action, ...args] = this.command.split(' ');\n        switch (action) {\n          case 'get':\n            if (args[0] === 'boards') {\n              await this.fetchBoards();\n            } else if (args[0] === 'lists') {\n              await this.fetchLists(args[1]);\n            }\n            break;\n          case 'create':\n            if (args[0] === 'board') {\n              await this.createBoard(args.slice(1).join(' '));\n            } else if (args[0] === 'list') {\n              await this.createList(args[1], args.slice(2).join(' '));\n            } else if (args[0] === 'card') {\n              await this.createCard(args[1], args[2], args.slice(3).join(' '));\n            }\n            break;\n          case 'delete':\n            if (args[0] === 'board') {\n              await this.deleteBoard(args[1]);\n            } else if (args[0] === 'list') {\n              await this.deleteList(args[1]);\n            } else if (args[0] === 'card') {\n              await this.deleteCard(args[1]);\n            }\n            break;\n          case 'move':\n            if (args[0] === 'card') {\n              await this.moveCard(args[1], args[2]);\n            }\n            break;\n          default:\n            this.output = 'Unknown command';\n        }\n      } catch (error) {\n        this.output = error.response ? error.response.data : error.message;\n      }\n    },\n    async fetchBoards() {\n      try {\n        const response = await axios.get('/boards');\n        this.boards = response.data;\n      } catch (error) {\n        this.boards = 'Error fetching boards: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async fetchLists(boardId) {\n      try {\n        const response = await axios.get(`/lists/${boardId}`);\n        this.lists = response.data;\n      } catch (error) {\n        this.lists = 'Error fetching lists: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async createBoard(name) {\n      try {\n        const response = await axios.post('/boards', {\n          name\n        });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error creating board: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async deleteBoard(boardId) {\n      try {\n        const response = await axios.delete(`/boards/${boardId}`);\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error deleting board: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async createList(boardId, name) {\n      try {\n        const response = await axios.post('/lists', {\n          boardId,\n          name\n        });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error creating list: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async deleteList(listId) {\n      try {\n        const response = await axios.delete(`/lists/${listId}`);\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error deleting list: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async createCard(listId, name, desc) {\n      try {\n        const response = await axios.post('/cards', {\n          listId,\n          name,\n          desc\n        });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error creating card: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async moveCard(cardId, listId) {\n      try {\n        const response = await axios.put(`/cards/${cardId}/idList`, {\n          value: listId\n        });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error moving card: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async deleteCard(cardId) {\n      try {\n        const response = await axios.delete(`/cards/${cardId}`);\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error deleting card: ' + (error.response ? error.response.data : error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","command","output","boards","lists","methods","executeCommand","action","args","split","fetchBoards","fetchLists","createBoard","slice","join","createList","createCard","deleteBoard","deleteList","deleteCard","moveCard","error","response","message","get","boardId","name","post","delete","listId","desc","cardId","put","value"],"sources":["F:\\CS203A2\\webapp\\public\\terminal-frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Terminal WebApp</h1>\n    <textarea v-model=\"command\" placeholder=\"Enter command\"></textarea>\n    <button @click=\"executeCommand\">Execute</button>\n    <pre>{{ output }}</pre>\n    <pre>{{ boards }}</pre>\n    <pre>{{ lists }}</pre>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      command: '',\n      output: '',\n      boards: '',\n      lists: ''\n    };\n  },\n  methods: {\n    async executeCommand() {\n      try {\n        const [action, ...args] = this.command.split(' ');\n        switch (action) {\n          case 'get':\n            if (args[0] === 'boards') {\n              await this.fetchBoards();\n            } else if (args[0] === 'lists') {\n              await this.fetchLists(args[1]);\n            }\n            break;\n          case 'create':\n            if (args[0] === 'board') {\n              await this.createBoard(args.slice(1).join(' '));\n            } else if (args[0] === 'list') {\n              await this.createList(args[1], args.slice(2).join(' '));\n            } else if (args[0] === 'card') {\n              await this.createCard(args[1], args[2], args.slice(3).join(' '));\n            }\n            break;\n          case 'delete':\n            if (args[0] === 'board') {\n              await this.deleteBoard(args[1]);\n            } else if (args[0] === 'list') {\n              await this.deleteList(args[1]);\n            } else if (args[0] === 'card') {\n              await this.deleteCard(args[1]);\n            }\n            break;\n          case 'move':\n            if (args[0] === 'card') {\n              await this.moveCard(args[1], args[2]);\n            }\n            break;\n          default:\n            this.output = 'Unknown command';\n        }\n      } catch (error) {\n        this.output = error.response ? error.response.data : error.message;\n      }\n    },\n    async fetchBoards() {\n      try {\n        const response = await axios.get('/boards');\n        this.boards = response.data;\n      } catch (error) {\n        this.boards = 'Error fetching boards: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async fetchLists(boardId) {\n      try {\n        const response = await axios.get(`/lists/${boardId}`);\n        this.lists = response.data;\n      } catch (error) {\n        this.lists = 'Error fetching lists: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async createBoard(name) {\n      try {\n        const response = await axios.post('/boards', { name });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error creating board: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async deleteBoard(boardId) {\n      try {\n        const response = await axios.delete(`/boards/${boardId}`);\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error deleting board: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async createList(boardId, name) {\n      try {\n        const response = await axios.post('/lists', { boardId, name });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error creating list: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async deleteList(listId) {\n      try {\n        const response = await axios.delete(`/lists/${listId}`);\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error deleting list: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async createCard(listId, name, desc) {\n      try {\n        const response = await axios.post('/cards', { listId, name, desc });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error creating card: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async moveCard(cardId, listId) {\n      try {\n        const response = await axios.put(`/cards/${cardId}/idList`, { value: listId });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error moving card: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async deleteCard(cardId) {\n      try {\n        const response = await axios.delete(`/cards/${cardId}`);\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error deleting card: ' + (error.response ? error.response.data : error.message);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n/* Add some basic styling */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}