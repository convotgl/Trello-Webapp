{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Terminal WebApp\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"terminal-container\"\n};\nconst _hoisted_4 = {\n  class: \"output\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"boards\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Boards\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  key: 1,\n  class: \"lists\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Lists\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.command = $event),\n    placeholder: \"Enter command\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.command]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.executeCommand && $options.executeCommand(...args))\n  }, \"Execute\"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"pre\", null, _toDisplayString($data.output), 1 /* TEXT */), $data.boards ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.boards, board => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: board.id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(board.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"ID: \" + _toDisplayString(board.id), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Description: \" + _toDisplayString(board.desc), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.lists ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.lists, list => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: list.id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(list.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"ID: \" + _toDisplayString(list.id), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_cache","$event","$data","command","placeholder","onClick","args","$options","executeCommand","_hoisted_4","_toDisplayString","output","boards","_hoisted_5","_hoisted_6","_Fragment","_renderList","board","name","desc","_createCommentVNode","lists","_hoisted_7","_hoisted_8","list"],"sources":["F:\\CS203A2\\webapp\\public\\terminal-frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Terminal WebApp</h1>\n    <div class=\"terminal-container\">\n      <textarea v-model=\"command\" placeholder=\"Enter command\"></textarea>\n      <button @click=\"executeCommand\">Execute</button>\n      <div class=\"output\">\n        <pre>{{ output }}</pre>\n        <div v-if=\"boards\" class=\"boards\">\n          <h2>Boards</h2>\n          <ul>\n            <li v-for=\"board in boards\" :key=\"board.id\">\n              <strong>{{ board.name }}</strong>\n              <p>ID: {{ board.id }}</p>\n              <p>Description: {{ board.desc }}</p>\n            </li>\n          </ul>\n        </div>\n        <div v-if=\"lists\" class=\"lists\">\n          <h2>Lists</h2>\n          <ul>\n            <li v-for=\"list in lists\" :key=\"list.id\">\n              <strong>{{ list.name }}</strong>\n              <p>ID: {{ list.id }}</p>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      command: '',\n      output: '',\n      boards: null,\n      lists: null\n    };\n  },\n  methods: {\n    async executeCommand() {\n      try {\n        const [action, ...args] = this.command.split(' ');\n        switch (action) {\n          case 'get':\n            if (args[0] === 'boards') {\n              await this.fetchBoards();\n            } else if (args[0] === 'lists') {\n              await this.fetchLists(args[1]);\n            }\n            break;\n          case 'create':\n            if (args[0] === 'board') {\n              await this.createBoard(args.slice(1).join(' '));\n            } else if (args[0] === 'list') {\n              await this.createList(args[1], args.slice(2).join(' '));\n            } else if (args[0] === 'card') {\n              await this.createCard(args[1], args[2], args.slice(3).join(' '));\n            }\n            break;\n          case 'delete':\n            if (args[0] === 'board') {\n              await this.deleteBoard(args[1]);\n            } else if (args[0] === 'list') {\n              await this.deleteList(args[1]);\n            } else if (args[0] === 'card') {\n              await this.deleteCard(args[1]);\n            }\n            break;\n          case 'move':\n            if (args[0] === 'card') {\n              await this.moveCard(args[1], args[2]);\n            }\n            break;\n          default:\n            this.output = 'Unknown command';\n        }\n      } catch (error) {\n        this.output = error.response ? error.response.data : error.message;\n      }\n    },\n    async fetchBoards() {\n      try {\n        const response = await axios.get('/boards');\n        this.boards = response.data;\n      } catch (error) {\n        this.boards = 'Error fetching boards: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async fetchLists(boardId) {\n      try {\n        const response = await axios.get(`/lists/${boardId}`);\n        this.lists = response.data;\n      } catch (error) {\n        this.lists = 'Error fetching lists: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async createBoard(name) {\n      try {\n        const response = await axios.post('/boards', { name });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error creating board: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async deleteBoard(boardId) {\n      try {\n        const response = await axios.delete(`/boards/${boardId}`);\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error deleting board: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async createList(boardId, name) {\n      try {\n        const response = await axios.post('/lists', { boardId, name });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error creating list: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async deleteList(listId) {\n      try {\n        const response = await axios.delete(`/lists/${listId}`);\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error deleting list: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async createCard(listId, name, desc) {\n      try {\n        const response = await axios.post('/cards', { listId, name, desc });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error creating card: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async moveCard(cardId, listId) {\n      try {\n        const response = await axios.put(`/cards/${cardId}/idList`, { value: listId });\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error moving card: ' + (error.response ? error.response.data : error.message);\n      }\n    },\n    async deleteCard(cardId) {\n      try {\n        const response = await axios.delete(`/cards/${cardId}`);\n        this.output = response.data;\n      } catch (error) {\n        this.output = 'Error deleting card: ' + (error.response ? error.response.data : error.message);\n      }\n    }\n  }\n};\n</script>\n\n<style>\nbody {\n  background-color: #2e2e2e;\n  color: #ffffff;\n  font-family: 'Courier New', Courier, monospace;\n}\n\n#app {\n  text-align: center;\n  padding: 20px;\n}\n\nh1 {\n  color: #00ff00;\n}\n\n.terminal-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\ntextarea {\n  width: 80%;\n  height: 100px;\n  background-color: #000000;\n  color: #00ff00;\n  border: 1px solid #00ff00;\n  margin-bottom: 10px;\n  padding: 10px;\n}\n\nbutton {\n  background-color: #00ff00;\n  color: #000000;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #00cc00;\n}\n\n.output {\n  text-align: left;\n  width: 80%;\n  margin-top: 20px;\n}\n\n.boards, .lists {\n  margin-top: 20px;\n}\n\n.boards ul, .lists ul {\n  list-style: none;\n  padding: 0;\n}\n\n.boards li, .lists li {\n  background-color: #444444;\n  margin: 10px 0;\n  padding: 10px;\n  border-radius: 5px;\n}\n\n.boards li strong, .lists li strong {\n  color: #00ff00;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;gCACXC,mBAAA,CAAwB,YAApB,iBAAe;;EACdC,KAAK,EAAC;AAAoB;;EAGxBA,KAAK,EAAC;AAAQ;;EANzBC,GAAA;EAQ2BD,KAAK,EAAC;;gCACvBD,mBAAA,CAAe,YAAX,QAAM;;EATpBE,GAAA;EAkB0BD,KAAK,EAAC;;gCACtBD,mBAAA,CAAc,YAAV,OAAK;;uBAlBjBG,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,UAAwB,EACxBL,mBAAA,CAyBM,OAzBNM,UAyBM,G,gBAxBJN,mBAAA,CAAmE;IAJzE,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIyBC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAArBF,KAAA,CAAAC,OAAO,E,GAC1BV,mBAAA,CAAgD;IAAvCY,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,SAAO,GACvCb,mBAAA,CAqBM,OArBNgB,UAqBM,GApBJhB,mBAAA,CAAuB,aAAAiB,gBAAA,CAAfR,KAAA,CAAAS,MAAM,kBACHT,KAAA,CAAAU,MAAM,I,cAAjBhB,mBAAA,CASM,OATNiB,UASM,GARJC,UAAe,EACfrB,mBAAA,CAMK,c,kBALHG,mBAAA,CAIKmB,SAAA,QAfjBC,WAAA,CAWgCd,KAAA,CAAAU,MAAM,EAAfK,KAAK;yBAAhBrB,mBAAA,CAIK;MAJwBD,GAAG,EAAEsB,KAAK,CAACzB;QACtCC,mBAAA,CAAiC,gBAAAiB,gBAAA,CAAtBO,KAAK,CAACC,IAAI,kBACrBzB,mBAAA,CAAyB,WAAtB,MAAI,GAAAiB,gBAAA,CAAGO,KAAK,CAACzB,EAAE,kBAClBC,mBAAA,CAAoC,WAAjC,eAAa,GAAAiB,gBAAA,CAAGO,KAAK,CAACE,IAAI,iB;wCAd3CC,mBAAA,gBAkBmBlB,KAAA,CAAAmB,KAAK,I,cAAhBzB,mBAAA,CAQM,OARN0B,UAQM,GAPJC,UAAc,EACd9B,mBAAA,CAKK,c,kBAJHG,mBAAA,CAGKmB,SAAA,QAxBjBC,WAAA,CAqB+Bd,KAAA,CAAAmB,KAAK,EAAbG,IAAI;yBAAf5B,mBAAA,CAGK;MAHsBD,GAAG,EAAE6B,IAAI,CAAChC;QACnCC,mBAAA,CAAgC,gBAAAiB,gBAAA,CAArBc,IAAI,CAACN,IAAI,kBACpBzB,mBAAA,CAAwB,WAArB,MAAI,GAAAiB,gBAAA,CAAGc,IAAI,CAAChC,EAAE,iB;wCAvB/B4B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}